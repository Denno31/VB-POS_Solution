'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated from a template.
'
'     Manual changes to this file may cause unexpected behavior in your application.
'     Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class POSEntities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=POSEntities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property N_CUST_SALE_SLIP_TRAN() As DbSet(Of N_CUST_SALE_SLIP_TRAN)
    Public Overridable Property MCUST() As DbSet(Of MCUST)
    Public Overridable Property MSTK_BR() As DbSet(Of MSTK_BR)
    Public Overridable Property MBOOK() As DbSet(Of MBOOK)

    Public Overridable Function usp_cust_read(iD As String) As ObjectResult(Of usp_cust_read_Result)
        Dim iDParameter As ObjectParameter = If(iD IsNot Nothing, New ObjectParameter("ID", iD), New ObjectParameter("ID", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_cust_read_Result)("usp_cust_read", iDParameter)
    End Function

    Public Overridable Function usp_saleSlip_head_insert(cust_id As String, sale_slip_id As String, description As String, createDate As Nullable(Of Date)) As Integer
        Dim cust_idParameter As ObjectParameter = If(cust_id IsNot Nothing, New ObjectParameter("cust_id", cust_id), New ObjectParameter("cust_id", GetType(String)))

        Dim sale_slip_idParameter As ObjectParameter = If(sale_slip_id IsNot Nothing, New ObjectParameter("sale_slip_id", sale_slip_id), New ObjectParameter("sale_slip_id", GetType(String)))

        Dim descriptionParameter As ObjectParameter = If(description IsNot Nothing, New ObjectParameter("Description", description), New ObjectParameter("Description", GetType(String)))

        Dim createDateParameter As ObjectParameter = If(createDate.HasValue, New ObjectParameter("CreateDate", createDate), New ObjectParameter("CreateDate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_saleSlip_head_insert", cust_idParameter, sale_slip_idParameter, descriptionParameter, createDateParameter)
    End Function

    Public Overridable Function usp_saleSlip_head_Read(cust_id As String, sale_slip_id As String, description As String, createDate As Nullable(Of Date), updateDate As Nullable(Of Date)) As ObjectResult(Of usp_saleSlip_head_Read_Result)
        Dim cust_idParameter As ObjectParameter = If(cust_id IsNot Nothing, New ObjectParameter("cust_id", cust_id), New ObjectParameter("cust_id", GetType(String)))

        Dim sale_slip_idParameter As ObjectParameter = If(sale_slip_id IsNot Nothing, New ObjectParameter("sale_slip_id", sale_slip_id), New ObjectParameter("sale_slip_id", GetType(String)))

        Dim descriptionParameter As ObjectParameter = If(description IsNot Nothing, New ObjectParameter("Description", description), New ObjectParameter("Description", GetType(String)))

        Dim createDateParameter As ObjectParameter = If(createDate.HasValue, New ObjectParameter("CreateDate", createDate), New ObjectParameter("CreateDate", GetType(Date)))

        Dim updateDateParameter As ObjectParameter = If(updateDate.HasValue, New ObjectParameter("UpdateDate", updateDate), New ObjectParameter("UpdateDate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_saleSlip_head_Read_Result)("usp_saleSlip_head_Read", cust_idParameter, sale_slip_idParameter, descriptionParameter, createDateParameter, updateDateParameter)
    End Function

    Public Overridable Function usp_saleSlip_head_running_read(sale_slip_id As String) As ObjectResult(Of String)
        Dim sale_slip_idParameter As ObjectParameter = If(sale_slip_id IsNot Nothing, New ObjectParameter("sale_slip_id", sale_slip_id), New ObjectParameter("sale_slip_id", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("usp_saleSlip_head_running_read", sale_slip_idParameter)
    End Function

    Public Overridable Function usp_saleSlip_head_search_doc_Read(sale_slip_id As String) As ObjectResult(Of usp_saleSlip_head_search_doc_Read_Result)
        Dim sale_slip_idParameter As ObjectParameter = If(sale_slip_id IsNot Nothing, New ObjectParameter("sale_slip_id", sale_slip_id), New ObjectParameter("sale_slip_id", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_saleSlip_head_search_doc_Read_Result)("usp_saleSlip_head_search_doc_Read", sale_slip_idParameter)
    End Function

    Public Overridable Function usp_saleSlip_head_update(cust_id As String, sale_slip_id As String, description As String, updateDate As Nullable(Of Date)) As Integer
        Dim cust_idParameter As ObjectParameter = If(cust_id IsNot Nothing, New ObjectParameter("cust_id", cust_id), New ObjectParameter("cust_id", GetType(String)))

        Dim sale_slip_idParameter As ObjectParameter = If(sale_slip_id IsNot Nothing, New ObjectParameter("sale_slip_id", sale_slip_id), New ObjectParameter("sale_slip_id", GetType(String)))

        Dim descriptionParameter As ObjectParameter = If(description IsNot Nothing, New ObjectParameter("Description", description), New ObjectParameter("Description", GetType(String)))

        Dim updateDateParameter As ObjectParameter = If(updateDate.HasValue, New ObjectParameter("UpdateDate", updateDate), New ObjectParameter("UpdateDate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_saleSlip_head_update", cust_idParameter, sale_slip_idParameter, descriptionParameter, updateDateParameter)
    End Function

    Public Overridable Function usp_saleSlip_tran_cancel_update(id As String, cust_id As String, sale_slip_id As String, detail As String, stk_id As String, qty As Nullable(Of Integer), prod_code As String, price As Nullable(Of Decimal), amount As Nullable(Of Decimal), updateDate As Nullable(Of Date), createDate As Nullable(Of Date)) As Integer
        Dim idParameter As ObjectParameter = If(id IsNot Nothing, New ObjectParameter("id", id), New ObjectParameter("id", GetType(String)))

        Dim cust_idParameter As ObjectParameter = If(cust_id IsNot Nothing, New ObjectParameter("cust_id", cust_id), New ObjectParameter("cust_id", GetType(String)))

        Dim sale_slip_idParameter As ObjectParameter = If(sale_slip_id IsNot Nothing, New ObjectParameter("sale_slip_id", sale_slip_id), New ObjectParameter("sale_slip_id", GetType(String)))

        Dim detailParameter As ObjectParameter = If(detail IsNot Nothing, New ObjectParameter("detail", detail), New ObjectParameter("detail", GetType(String)))

        Dim stk_idParameter As ObjectParameter = If(stk_id IsNot Nothing, New ObjectParameter("stk_id", stk_id), New ObjectParameter("stk_id", GetType(String)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Integer)))

        Dim prod_codeParameter As ObjectParameter = If(prod_code IsNot Nothing, New ObjectParameter("prod_code", prod_code), New ObjectParameter("prod_code", GetType(String)))

        Dim priceParameter As ObjectParameter = If(price.HasValue, New ObjectParameter("price", price), New ObjectParameter("price", GetType(Decimal)))

        Dim amountParameter As ObjectParameter = If(amount.HasValue, New ObjectParameter("amount", amount), New ObjectParameter("amount", GetType(Decimal)))

        Dim updateDateParameter As ObjectParameter = If(updateDate.HasValue, New ObjectParameter("UpdateDate", updateDate), New ObjectParameter("UpdateDate", GetType(Date)))

        Dim createDateParameter As ObjectParameter = If(createDate.HasValue, New ObjectParameter("CreateDate", createDate), New ObjectParameter("CreateDate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_saleSlip_tran_cancel_update", idParameter, cust_idParameter, sale_slip_idParameter, detailParameter, stk_idParameter, qtyParameter, prod_codeParameter, priceParameter, amountParameter, updateDateParameter, createDateParameter)
    End Function

    Public Overridable Function usp_saleSlip_tran_insert(cust_id As String, sale_slip_id As String, prod_code As String, detail As String, stk_id As String, qty As String, price As Nullable(Of Decimal), amount As Nullable(Of Decimal), createDate As Nullable(Of Date)) As Integer
        Dim cust_idParameter As ObjectParameter = If(cust_id IsNot Nothing, New ObjectParameter("cust_id", cust_id), New ObjectParameter("cust_id", GetType(String)))

        Dim sale_slip_idParameter As ObjectParameter = If(sale_slip_id IsNot Nothing, New ObjectParameter("sale_slip_id", sale_slip_id), New ObjectParameter("sale_slip_id", GetType(String)))

        Dim prod_codeParameter As ObjectParameter = If(prod_code IsNot Nothing, New ObjectParameter("prod_code", prod_code), New ObjectParameter("prod_code", GetType(String)))

        Dim detailParameter As ObjectParameter = If(detail IsNot Nothing, New ObjectParameter("detail", detail), New ObjectParameter("detail", GetType(String)))

        Dim stk_idParameter As ObjectParameter = If(stk_id IsNot Nothing, New ObjectParameter("stk_id", stk_id), New ObjectParameter("stk_id", GetType(String)))

        Dim qtyParameter As ObjectParameter = If(qty IsNot Nothing, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(String)))

        Dim priceParameter As ObjectParameter = If(price.HasValue, New ObjectParameter("price", price), New ObjectParameter("price", GetType(Decimal)))

        Dim amountParameter As ObjectParameter = If(amount.HasValue, New ObjectParameter("amount", amount), New ObjectParameter("amount", GetType(Decimal)))

        Dim createDateParameter As ObjectParameter = If(createDate.HasValue, New ObjectParameter("CreateDate", createDate), New ObjectParameter("CreateDate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_saleSlip_tran_insert", cust_idParameter, sale_slip_idParameter, prod_codeParameter, detailParameter, stk_idParameter, qtyParameter, priceParameter, amountParameter, createDateParameter)
    End Function

    Public Overridable Function usp_saleSlip_tran_Read(cust_id As String, sale_slip_id As String, prod_code As String, createDate As Nullable(Of Date)) As ObjectResult(Of usp_saleSlip_tran_Read_Result)
        Dim cust_idParameter As ObjectParameter = If(cust_id IsNot Nothing, New ObjectParameter("cust_id", cust_id), New ObjectParameter("cust_id", GetType(String)))

        Dim sale_slip_idParameter As ObjectParameter = If(sale_slip_id IsNot Nothing, New ObjectParameter("sale_slip_id", sale_slip_id), New ObjectParameter("sale_slip_id", GetType(String)))

        Dim prod_codeParameter As ObjectParameter = If(prod_code IsNot Nothing, New ObjectParameter("prod_code", prod_code), New ObjectParameter("prod_code", GetType(String)))

        Dim createDateParameter As ObjectParameter = If(createDate.HasValue, New ObjectParameter("CreateDate", createDate), New ObjectParameter("CreateDate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_saleSlip_tran_Read_Result)("usp_saleSlip_tran_Read", cust_idParameter, sale_slip_idParameter, prod_codeParameter, createDateParameter)
    End Function

    Public Overridable Function usp_saleSlip_tran_update(id As String, cust_id As String, sale_slip_id As String, detail As String, stk_id As String, qty As Nullable(Of Integer), prod_code As String, price As Nullable(Of Decimal), amount As Nullable(Of Decimal), updateDate As Nullable(Of Date), createDate As Nullable(Of Date)) As Integer
        Dim idParameter As ObjectParameter = If(id IsNot Nothing, New ObjectParameter("id", id), New ObjectParameter("id", GetType(String)))

        Dim cust_idParameter As ObjectParameter = If(cust_id IsNot Nothing, New ObjectParameter("cust_id", cust_id), New ObjectParameter("cust_id", GetType(String)))

        Dim sale_slip_idParameter As ObjectParameter = If(sale_slip_id IsNot Nothing, New ObjectParameter("sale_slip_id", sale_slip_id), New ObjectParameter("sale_slip_id", GetType(String)))

        Dim detailParameter As ObjectParameter = If(detail IsNot Nothing, New ObjectParameter("detail", detail), New ObjectParameter("detail", GetType(String)))

        Dim stk_idParameter As ObjectParameter = If(stk_id IsNot Nothing, New ObjectParameter("stk_id", stk_id), New ObjectParameter("stk_id", GetType(String)))

        Dim qtyParameter As ObjectParameter = If(qty.HasValue, New ObjectParameter("qty", qty), New ObjectParameter("qty", GetType(Integer)))

        Dim prod_codeParameter As ObjectParameter = If(prod_code IsNot Nothing, New ObjectParameter("prod_code", prod_code), New ObjectParameter("prod_code", GetType(String)))

        Dim priceParameter As ObjectParameter = If(price.HasValue, New ObjectParameter("price", price), New ObjectParameter("price", GetType(Decimal)))

        Dim amountParameter As ObjectParameter = If(amount.HasValue, New ObjectParameter("amount", amount), New ObjectParameter("amount", GetType(Decimal)))

        Dim updateDateParameter As ObjectParameter = If(updateDate.HasValue, New ObjectParameter("UpdateDate", updateDate), New ObjectParameter("UpdateDate", GetType(Date)))

        Dim createDateParameter As ObjectParameter = If(createDate.HasValue, New ObjectParameter("CreateDate", createDate), New ObjectParameter("CreateDate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_saleSlip_tran_update", idParameter, cust_idParameter, sale_slip_idParameter, detailParameter, stk_idParameter, qtyParameter, prod_codeParameter, priceParameter, amountParameter, updateDateParameter, createDateParameter)
    End Function

    Public Overridable Function usp_StockOnhand_Read(pROD_CODE As String) As ObjectResult(Of usp_StockOnhand_Read_Result)
        Dim pROD_CODEParameter As ObjectParameter = If(pROD_CODE IsNot Nothing, New ObjectParameter("PROD_CODE", pROD_CODE), New ObjectParameter("PROD_CODE", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_StockOnhand_Read_Result)("usp_StockOnhand_Read", pROD_CODEParameter)
    End Function

End Class
